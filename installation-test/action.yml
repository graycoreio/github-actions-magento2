name: "Installation Test"
author: "Graycore"
description: " A Github Action that tests the installability of a Magento Package"
secrets:
  
inputs:
  php_version: 
    required: true
    default: "8.1"
    description: "PHP Version to use"

  cache_key: 
    required: true
    default: "2"
    description: "The cache key used to hold Composer Packages"

  cache_directory:
    required: true
    default:  $(Pipeline.Workspace)/.composer
    description: "The cache directory where Composer Packages are held"
  
  composer_version: 
    required: true
    default: "2"
    description: "The version of composer to use"

  source_folder:
    required: true
    default: $(GITHUB_WORKSPACE)
    description: "The source folder of the package"

  package_name:
    required: true
    description: "The name of the package"

  magento_directory:
    required: true
    default: "../magento2"
    description: "The folder where Magento will be installed"

  magento_version:
    required: true
    default: "magento/project-community-edition"
    description: "The version of Magento to test against"
    
  magento_repository:
    required: true
    default: "https://repo.magento.com/"
    description: "Where to install Magento from"
  
  composer_auth:
    required: true
    description: "Composer Authentication Credentials"

runs:
  using: "composite"
  steps:
    - name: Set PHP Version
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php_version }}

    - run: composer self-update --${{ inputs.composer_version }}
      name: Pin to Composer Version ${{ inputs.composer_version }}
      shell: bash

    - name: "Cache Composer Packages"
      uses: actions/cache@v3
      with:
        key: 'composer | "$(Agent.OS)"  | composer.lock | ${{ inputs.composer_version }} | ${{ inputs.php_version }} | ${{ inputs.magento_version }}' 
        path:  ${{ inputs.cache_directory }}

    - run: composer create-project --repository-url="${{ inputs.magento_repository }}" ${{ inputs.magento_directory }} --no-install
      shell: bash
      env:
        COMPOSER_AUTH: ${{ inputs.composer_auth }}
      name: Create Magento ${{ inputs.magento_version }} Project 

    - run: composer config repositories.local path ${{ inputs.source_folder }}
      name: Add Github Repo for Testing
      working-directory:  ${{ inputs.magento_directory }}
      shell: bash
    
    - run: composer require ${{ inputs.package_name }} "@dev" --no-update && composer install --dry-run
      name: Require and attempt install
      working-directory:  ${{ inputs.magento_directory }}
      shell: bash
      env:
        COMPOSER_AUTH: ${{ inputs.composer_auth }}

branding:
  icon: "code"
  color: "green"
